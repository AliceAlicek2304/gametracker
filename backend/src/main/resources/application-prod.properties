# ========================================
# AWS Lambda Production Configuration
# ========================================
# This profile is activated when deployed to AWS Lambda
# All sensitive data uses environment variables

spring.application.name=gametracker

# ========================================
# Database Configuration - AWS RDS
# ========================================
spring.datasource.url=jdbc:sqlserver://${DB_HOST}:${DB_PORT};databaseName=${DB_NAME};encrypt=true;trustServerCertificate=true
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# ========================================
# HikariCP Connection Pool - Optimized for Lambda
# ========================================
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=60000

# ========================================
# Email Configuration - AWS SES
# ========================================
spring.mail.host=${MAIL_HOST:email-smtp.ap-southeast-2.amazonaws.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.from=${MAIL_FROM:noreply@gametracker.com}

# ========================================
# JWT Configuration
# ========================================
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# ========================================
# Frontend URL (for email verification redirects)
# ========================================
app.frontend.url=${FRONTEND_URL:https://gametracker.com}

# ========================================
# Logging - Production Level
# ========================================
logging.level.root=WARN
logging.level.com.alice.gametracker=INFO
logging.level.com.alice.gametracker.config.AuthTokenFilter=INFO
logging.level.com.alice.gametracker.utils.JwtUtils=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN        

# ========================================
# File Storage Configuration - AWS S3
# ========================================
app.storage.type=${STORAGE_TYPE:s3}
aws.s3.bucket.name=${S3_BUCKET_NAME:gametracker-assets}
aws.s3.region=${AWS_REGION:ap-southeast-2}

# S3 Storage Paths (will be used as S3 keys)
app.avatar.storage.location=avatars/
app.avatar.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/avatars
app.role.storage.location=roles/
app.role.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/roles
app.character.storage.location=characters/
app.character.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/characters
app.weapon.storage.location=weapons/
app.weapon.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/weapons
app.setecho.storage.location=setechoes/
app.setecho.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/setechoes
app.echo.storage.location=echoes/
app.echo.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/echoes
app.element.storage.location=elements/
app.element.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/elements
app.background.storage.location=backgrounds/
app.background.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/backgrounds
app.event.storage.location=events/
app.event.url.pattern=https://${S3_BUCKET_NAME:gametracker-assets}.s3.${AWS_REGION:ap-southeast-2}.amazonaws.com/events

# ========================================
# Google OAuth2 (from environment variables)
# ========================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:https://gametracker.com/oauth2/redirect}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# ========================================
# Spring Boot Optimization for Lambda
# ========================================
spring.jmx.enabled=false
spring.main.lazy-initialization=true
spring.devtools.restart.enabled=false
management.endpoints.enabled-by-default=false

# ========================================
# Security
# ========================================
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-binding-errors=never
